using namespace System.Management.Automation
using namespace System.Management.Automation.Language

{{ if eq .chezmoi.os "windows" -}}
$env:PATH = "$env:UserProfile\.scripts\windows" + [IO.Path]::PathSeparator + $env:PATH
{{- else -}}
Invoke-Expression "$HOME/.scripts/posix/icon"
{{- end }}

$env:PATH = "$env:UserProfile\.scripts\pwsh" + [IO.Path]::PathSeparator + $env:PATH

New-Alias which Get-Command
# Mirror my hopelessness from .zshrc
New-Alias ehco echo

if ($env:WT_SESSION) {
  # Windows terminal is a bit dumb
  # https://github.com/microsoft/terminal/issues/11057
  $env:COLORTERM = "truecolor"
}

if (Get-CommandExists "code") {
  $env:VISUAL="`"$((Get-Command "code").Source)`" --wait --new-window"
}
if (Get-CommandExists "nvim") {
  $env:EDITOR="`"$((Get-Command "nvim").Source)`""
}

# Completion from files
Get-ChildItem "$HOME/.scripts/.completion/powershell/" -Filter *.ps1 | 
Foreach-Object {
  $content = Get-Content $_.FullName | Out-String
  Invoke-Expression $content
}

Import-ModuleIfNeeded "PSReadLine"

# Search history properly
Set-PSReadLineOption -HistorySearchCursorMovesToEnd
Set-PSReadLineKeyHandler -Key UpArrow -Function HistorySearchBackward
Set-PSReadLineKeyHandler -Key DownArrow -Function HistorySearchForward
